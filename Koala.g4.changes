prog: block
;

block: (stat NEWLINE)*
;

blockif: block
;

blockelse: block
;

blockfun: block
;

stat: IF '(' cond ')' blockif END #if
	| IF '(' cond ')' blockif ELSE blockelse END #ifelse
	| FUNCTION funname '(' ID (',' ID)* ')' blockfun END #fun
	| RET expr0
;

expr0: ID '(' fparam (',' fparam)* ')' #call
;

RET: 'return'
;

funname: ID
;

IF: 'if'
;

ELSE: 'else'
;

FUNCTION: 'function'
;

END: 'end'
;

fparam: expr0
;

cond: expr0 comp expr0
	| strexpr strcomp strexpr
;

comp: '<'	#less
	|'<='	#lessequal
	|'=='	#equal
	|'!='	#notequal
	|'>='	#moreequal
	|'>'	#more
;

strcomp: '=='	#strequal
	|'!='	#strnotequal
;
